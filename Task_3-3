#Task 3: AI-based Tic-Tac-Toe
# Initialize the board
def initialize_board():
    return [" " for _ in range(9)]

# Display the board
def display_board(board):
    for i in range(0, 9, 3):
        print(board[i] + "|" + board[i + 1] + "|" + board[i + 2])
        if i < 6:
            print("-+-+-")

# Check for a winner
def check_winner(board, player):
    winning_combinations = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]             # Diagonals
    ]
    return any(all(board[pos] == player for pos in combo) for combo in winning_combinations)

# Check for a draw
def check_draw(board):
    return " " not in board

# Minimax algorithm
def minimax(board, depth, is_maximizing):
    if check_winner(board, "O"):
        return 10 - depth
    if check_winner(board, "X"):
        return depth - 10
    if check_draw(board):
        return 0

    if is_maximizing:
        best_score = float("-inf")
        for i in range(9):
            if board[i] == " ":
                board[i] = "O"
                score = minimax(board, depth + 1, False)
                board[i] = " "
                best_score = max(best_score, score)
        return best_score
    else:
        best_score = float("inf")
        for i in range(9):
            if board[i] == " ":
                board[i] = "X"
                score = minimax(board, depth + 1, True)
                board[i] = " "
                best_score = min(best_score, score)
        return best_score

# AI's move
def ai_move(board):
    best_score = float("-inf")
    move = None
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            score = minimax(board, 0, False)
            board[i] = " "
            if score > best_score:
                best_score = score
                move = i
    return move

# Main Game Loop
def play_game():
    board = initialize_board()
    print("Welcome to Tic-Tac-Toe! You are 'X'.")
    display_board(board)

    while True:
        # User's move
        while True:
            try:
                user_move = int(input("Enter your move (1-9): ")) - 1
                if board[user_move] == " ":
                    board[user_move] = "X"
                    break
                else:
                    print("Spot already taken. Try again.")
            except (IndexError, ValueError):
                print("Invalid input. Please enter a number between 1 and 9.")

        display_board(board)

        if check_winner(board, "X"):
            print("Congratulations! You win!")
            break
        if check_draw(board):
            print("It's a draw!")
            break

        # AI's move
        print("AI is making its move...")
        ai_choice = ai_move(board)
        board[ai_choice] = "O"

        display_board(board)

        if check_winner(board, "O"):
            print("AI wins! Better luck next time.")
            break
        if check_draw(board):
            print("It's a draw!")
            break

# Start the game
play_game()

Welcome to Tic-Tac-Toe! You are 'X'.
 | | 
-+-+-
 | | 
-+-+-
 | | 
Enter your move (1-9):  1
X| | 
-+-+-
 | | 
-+-+-
 | | 
AI is making its move...
X| | 
-+-+-
 |O| 
-+-+-
 | | 
Enter your move (1-9):  9
X| | 
-+-+-
 |O| 
-+-+-
 | |X
AI is making its move...
X|O| 
-+-+-
 |O| 
-+-+-
 | |X
Enter your move (1-9):  8
X|O| 
-+-+-
 |O| 
-+-+-
 |X|X
AI is making its move...
X|O| 
-+-+-
 |O| 
-+-+-
O|X|X
Enter your move (1-9):  3
X|O|X
-+-+-
 |O| 
-+-+-
O|X|X
AI is making its move...
X|O|X
-+-+-
 |O|O
-+-+-
O|X|X
Enter your move (1-9):  4
X|O|X
-+-+-
X|O|O
-+-+-
O|X|X
It's a draw!
